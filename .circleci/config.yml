# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      - image: circleci/android:api-29-ndk
    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      ANDROID_HOME: /opt/android/sdk


    steps:
      - checkout

      #Check init
      - run:
          name: check init
          command: |
            echo $PWD
            ls -la .
            ls -la $ANDROID_HOME
      # Download and cache dependencies gradle
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}


      #Check init
      - run:
          name: check init Key
          command: |
            mkdir /home/circleci/key
            echo $test_keystore > /home/circleci/key/base64
            base64 -d /home/circleci/key/base64 > /home/circleci/key/keystore
            ls -la /home/circleci/key
      #Test
      - run:
          name: creating google services json file
          command: |
            echo "$BASE64_GOOGLE_SERVICES_JSON_FILE" | base64 --decode > ~/repo/app/google-services.json
            ls -la ~/repo/app/
      #Refresh gradle
      - run:
          name: Refresh gradle
          command: |
            ./gradlew   dependencies



      #gradle build
      - run:
          name: gradle build
          command: |
            ./gradlew  --console=plain  build

      #gradle test
      - run:
          name: gradle test
          command: |
            ./gradlew  --console=plain  test

      - run:
          name: Build debug APK and release APK
          command: |
            ./gradlew :app:assembleDebug
            ./gradlew :app:assembleDebugAndroidTest

      # save cache
      - save_cache:
          paths:
            - ~/.gradle

          key: v4-dependencies-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: ~/repo/app/build/outputs
          # Must be relative path from root
          paths:
            - apk
      # save tests!
      - run:
          name: Save test results
          command: |
            mkdir -p ~/atrifact
            ls -l ./app/build
            cp -r ./app/build/reports ~/atrifact;
            cp -r ./app/build/test-results ~/atrifact;
            cp -r ./app/build/outputs ~/atrifact;

          when: always
      - store_test_results:
          path: ./app/build/test-results
      - store_artifacts:
          path: ~/atrifact
  firebase_test:
    docker :
      - image: circleci/android:api-29-ndk
    resource_class: small
    working_directory: ~/repo

    steps:
   #Configure github Repo

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace

      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project android-testing-28ddd
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run     --app /tmp/workspace/apk/debug/app-debug.apk   --test /tmp/workspace/apk/androidTest/debug/app-debug-androidTest.apk     --device model=Pixel 4,version=29




workflows:
  version: 2
  commit:
    jobs:
      - build
      - firebase_test:
          requires:
            - build
