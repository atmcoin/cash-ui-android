# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      - image: circleci/android:api-29-ndk
    resource_class: medium+
    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      SDK_FILENAME: sdk-tools-linux-4333796.zip
      ANDROID_HOME: /opt/android/sdk


    steps:
      - checkout

      #Check init
      - run:
          name: check init
          command: |
            echo $PWD
            ls -la .
            ls -la $ANDROID_HOME
      # Download and cache dependencies gradle
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}


      #Check init
      - run:
          name: check init Key
          command: |
            mkdir /home/circleci/key
            echo $test_keystore > /home/circleci/key/base64
            base64 -d /home/circleci/key/base64 > /home/circleci/key/keystore
            ls -la /home/circleci/key

      #Refresh gradle
      - run:
          name: Refresh gradle
          command: |
            ./gradlew   dependencies



      #gradle build
      - run:
          name: gradle build
          command: |
            ./gradlew  --console=plain  build

      #gradle test
      - run:
          name: gradle test
          command: |
            ./gradlew  --console=plain  test


      - run:
          name: list emulator
          command: sdkmanager --list

      - run:
          name: Setup emulator
          command: sdkmanager "system-images;android-25;google_apis;arm64-v8a" && echo "no" | avdmanager create avd -n test -k "system-images;android-25;google_apis;arm64-v8a"
      - run:
          name: Launch emulator
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator -avd test -noaudio -no-boot-anim -no-window -no-accel -memory 2048 -verbos
          background: true
      - run:
          name: Wait emulator
          command: |
            # wait for it to have booted
            circle-android wait-for-boot
            # unlock the emulator screen
            sleep 30
            adb shell input keyevent 82
      - run:
          name: Run Tests
          command: ./gradlew connectedAndroidTest

      # save cache
      - save_cache:
          paths:
            - ~/.gradle

          key: v4-dependencies-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}


      # save tests!
      - run:
          name: Save test results
          command: |
            mkdir -p ~/atrifact
            ls -l ./app/build
            cp -r ./app/build/reports ~/atrifact;
            cp -r ./app/build/test-results ~/atrifact;
            cp -r ./app/build/outputs ~/atrifact;

          when: always
      - store_test_results:
          path: ./app/build/test-results
      - store_artifacts:
          path: ~/atrifact


workflows:
  version: 2
  commit:
    jobs:
      - build
